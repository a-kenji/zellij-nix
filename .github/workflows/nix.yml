name: "nix"
on:
  pull_request:
  push:
jobs:
  # flake-check:
  #   name: "flake check"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: cachix/install-nix-action@v19
  #     with:
  #       extra_nix_config: |
  #         access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #   - uses: cachix/cachix-action@v12
  #     with:
  #       name: zellij
  #       # If you chose API tokens for write access OR if you have a private cache
  #       authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #   - name: "nix flake check"
  #     run: nix flake check
  build:
    name: "build"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v12
      with:
        name: zellij
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    #- name: Print nixpkgs version
      #run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: "nix build"
      run: nix build
  nix-develop:
    name: "develop"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v12
      with:
        name: zellij
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "nix develop"
      run: nix develop
  format:
    name: "treefmt"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
        nix_path: nixpkgs=channel:nixos-unstable
                  # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0
    - name: "nix shell treefmt"
      run: nix-shell -p pkgs.treefmt pkgs.nixpkgs-fmt --command "treefmt --fail-on-change"
